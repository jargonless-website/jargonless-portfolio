x-common-logging: &common_logging
  driver: json-file
  options: { max-size: "10m", max-file: "5" }

x-common-resources: &common_resources
  deploy:
    resources:
      limits: { memory: "512M" }
      reservations: { memory: "128M" }

services:
  nginx:
    restart: unless-stopped
    ports: []  # no host ports; Cloudflare only
    environment: [NODE_ENV=staging]
    volumes:
      - ${NGINX_CONFIG_PATH:-./../nginx/nginx.conf}:/etc/nginx/nginx.conf:ro
      - ${NGINX_SNIPPETS_PATH:-./../nginx/snippets}:/etc/nginx/snippets:ro
    read_only: true
    tmpfs: [/var/cache/nginx, /var/run, /var/log/nginx]
    security_opt: [no-new-privileges:true]
    cap_drop: [NET_ADMIN, SYS_ADMIN]
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost/ || exit 1"]
      interval: 15s
      timeout: 3s
      retries: 10
      start_period: 20s
    logging: *common_logging
    <<: *common_resources
    networks: [webnet]

  api:
    restart: unless-stopped
    env_file:
      - ${APP_ENV_FILE:-./.env.production.stg}
    environment:
      - ENV=staging
      - CORS_ORIGINS=https://staging.jargonless.ai
    ports: []  # no host ports; Cloudflare only
    read_only: true
    tmpfs: [/tmp]
    security_opt: [no-new-privileges:true]
    cap_drop: [SYS_ADMIN, NET_ADMIN]
    healthcheck:
      test:
        - CMD-SHELL
        - >
          python -c "import sys,urllib.request,socket;
          socket.setdefaulttimeout(3);
          sys.exit(0 if urllib.request.urlopen('http://localhost:8000/api/health').getcode()==200 else 1)"
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    logging: *common_logging
    <<: *common_resources
    networks: [webnet]

  jl_tunnel:
    image: cloudflare/cloudflared:latest
    restart: always
    command: ["tunnel", "run", "--token", "${CLOUDFLARE_TUNNEL_TOKEN}"]
    env_file:
      - ${TUNNEL_ENV_FILE:-./.env.tunnel.stg}
    logging: *common_logging
    <<: *common_resources
    networks: [webnet]