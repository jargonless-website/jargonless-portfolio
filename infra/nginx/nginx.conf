worker_processes auto;

events { worker_connections 1024; }

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;
  sendfile      on;
  keepalive_timeout 65;

  # Treat both prod & stg the same; CF terminates TLS & sets Host header.
  server {
    listen 80;
    server_name _;

    # static SPA from the image
    root  /usr/share/nginx/html;
    index index.html;

    # quick local health (no upstream)
    location = /api/health {
      add_header Content-Type application/json;
      return 200 '{"ok":true}';
    }

    # API proxy (service name in Docker network)
    location /api/ {
      proxy_pass         http://api:8000;
      proxy_http_version 1.1;
      proxy_set_header   Host $host;
      proxy_set_header   X-Real-IP $remote_addr;
      proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header   X-Forwarded-Proto $scheme;
      proxy_read_timeout 30s;
    }

    # Cache static JS aggressively
    location /assets/ {
      try_files $uri =404;
      types { application/javascript js mjs; }
      default_type application/javascript;
      add_header Cache-Control "max-age=31536000, immutable";
      access_log off;
    }

    # SPA fallback
    location / {
      try_files $uri /index.html;
      add_header Cache-Control "no-store";
    }

    # nginx self-health
    location = /nginx-health {
      add_header Content-Type text/plain;
      return 200 "ok";
    }

    # Optional: harmless visual marker via header
    add_header X-Env $host always;
  }
}